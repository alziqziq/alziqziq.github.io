{"version":3,"sources":["assets/images/pokeball.png","helpers/index.js","models/pokemon.js","assets/index.js","components/PokeTypes/index.jsx","components/List/index.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","helpers","titleCase","text","startCase","toLower","hashCode","str","hash","i","length","charCodeAt","intToRGB","c","toString","toUpperCase","substring","convertStringToColor","concat","getPokemon","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee2","url","res","data","results","arrMapping","promises","wrap","_context2","prev","next","fetch","sent","json","map","_ref2","_callee","list","item","_context","getPokemonDetail","detail","mappingFilter","types","filter","abrupt","stop","_x2","apply","this","arguments","Promise","all","_x","_ref3","_callee3","_context3","_x3","arr","push","type","name","assets","pokeball","PokeTypes","props","react_default","createElement","className","key","style","backgroundColor","React","Component","List","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggle","setState","prevState","isShow","getPokeImage","get","state","img","onClick","src","alt","id","components_PokeTypes","Modal","isOpen","size","ModalHeader","ModalBody","marginBottom","height","weight","abilities","ability","App","handleGetPokemon","then","newData","newFilter","sortBy","uniq","handleCheck","selected","index","checked","indexOf","splice","toConsumableArray","handleFilter","retData","obj","includes","pureData","_this2","Images","react_stickynode_default","ButtonGroup","vertical","Button","active","outline","color","components_List","es","onEnter","ClipLoader_default","sizeUnit","loading","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,geCGlCC,EAAU,CACdC,UAAW,SAAAC,GACT,OAAOC,IAAUC,IAAQF,KAG3BG,SAAU,SAAAC,GAER,IADA,IAAIC,EAAO,EACFC,EAAI,EAAGA,EAAIF,EAAIG,OAAQD,IAC7BD,EAAOD,EAAII,WAAWF,KAAOD,GAAQ,GAAKA,GAE7C,OAAOA,GAGTI,SAAU,SAAAH,GACR,IAAII,GAAS,SAAJJ,GACJK,SAAS,IACTC,cAEL,MAAO,QAAQC,UAAU,EAAG,EAAIH,EAAEH,QAAUG,GAG9CI,qBAAsB,SAAAV,GACpB,UAAAW,OAAWjB,EAAQW,SAASX,EAAQK,SAASC,OAIlCN,6BC7BFkB,EAAU,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAC,EAAMC,GAAN,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAT,EAAAC,EAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACNC,MAAMV,GADA,cAClBC,EADkBM,EAAAI,KAAAJ,EAAAE,KAAA,EAEPR,EAAIW,OAFG,UAEpBV,EAFoBK,EAAAI,KAGlBR,EAAUD,EAAKC,QACjBC,EAAa,KAEbD,EAAQpB,OAAS,GANG,CAAAwB,EAAAE,KAAA,gBAOhBJ,EAAWF,EAAQU,IAAR,eAAAC,EAAApB,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAY,SAAAiB,EAAMC,GAAN,IAAAC,EAAA,OAAArB,EAAAC,EAAAS,KAAA,SAAAY,GAAA,cAAAA,EAAAV,KAAAU,EAAAT,MAAA,cAAAS,EAAAT,KAAA,EACPU,EAAiBH,EAAKhB,KADf,cAC3BgB,EAAKI,OADsBF,EAAAP,KAErBM,EAAOI,EAAcL,EAAKI,OAAOE,OAEvCN,EAAKO,OAASN,EACdb,EAAaA,EAAWb,OAAO0B,GALJC,EAAAM,OAAA,SAOpBR,GAPoB,wBAAAE,EAAAO,SAAAV,MAAZ,gBAAAW,GAAA,OAAAZ,EAAAa,MAAAC,KAAAC,YAAA,IAPKtB,EAAAE,KAAA,GAgBDqB,QAAQC,IAAI1B,GAhBX,QAgBtBH,EAAKC,QAhBiBI,EAAAI,KAAA,eAmBxBT,EAAKqB,OAASnB,EAnBUG,EAAAiB,OAAA,SAqBjBtB,GArBiB,yBAAAK,EAAAkB,SAAA1B,MAAH,gBAAAiC,GAAA,OAAAvC,EAAAkC,MAAAC,KAAAC,YAAA,GAwBVV,EAAgB,eAAAc,EAAAvC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAoC,EAAMlC,GAAN,IAAAC,EAAAmB,EAAA,OAAAxB,EAAAC,EAAAS,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,cAAA0B,EAAA1B,KAAA,EACZC,MAAMV,GADM,cACxBC,EADwBkC,EAAAxB,KAAAwB,EAAA1B,KAAA,EAETR,EAAIW,OAFK,cAExBQ,EAFwBe,EAAAxB,KAAAwB,EAAAX,OAAA,SAIvBJ,GAJuB,wBAAAe,EAAAV,SAAAS,MAAH,gBAAAE,GAAA,OAAAH,EAAAN,MAAAC,KAAAC,YAAA,GAOvBR,EAAgB,SAAAC,GACpB,IAAMe,EAAM,GAMZ,OAJAf,EAAMT,IAAI,SAAAG,GACRqB,EAAIC,KAAKtB,EAAKuB,KAAKC,QAGdH,YCpCMI,EAAA,CACbC,+DC2BaC,2LArBX,IAAMC,EAAQhB,KAAKgB,MAGnB,OACEC,EAAAhD,EAAAiD,cAAA,OAAKC,UAAU,0BACZH,EAAMtB,OAASsB,EAAMtB,MAAMT,IAAI,SAACG,EAAMgC,GACrC,OACEH,EAAAhD,EAAAiD,cAAA,OAAKC,UAAU,WAAWC,IAAKA,EAAKC,MAAO,CAAEC,gBAAiB5E,EAAQgB,qBAAqB0B,EAAKuB,KAAKC,QAClGlE,EAAQC,UAAUyC,EAAKuB,KAAKC,iBAVnBW,IAAMC,YCwGfC,sBArGb,SAAAA,EAAYT,GAAO,IAAAU,EAAA,OAAA5D,OAAA6D,EAAA,EAAA7D,CAAAkC,KAAAyB,IACjBC,EAAA5D,OAAA8D,EAAA,EAAA9D,CAAAkC,KAAAlC,OAAA+D,EAAA,EAAA/D,CAAA2D,GAAAK,KAAA9B,KAAMgB,KAORe,OAAS,WACPL,EAAKM,SAAS,SAAAC,GAAS,MAAK,CAC1BC,QAASD,EAAUC,WAVJR,EAcnBS,aAAe,SAAA7D,GACb,OAAO8D,IAAI9D,EAAM,+BAAgC,KAZjDoD,EAAKW,MAAQ,CACXH,QAAQ,GAJOR,wEAmBjB,IAAMV,EAAQhB,KAAKgB,MACbqB,EAAQrC,KAAKqC,MACbC,EAAMtC,KAAKmC,aAAanB,EAAM1C,MAC9BsC,EAAOlE,EAAQC,UAAUqE,EAAM1C,KAAKsC,MAE1C,OACEK,EAAAhD,EAAAiD,cAAA,OAAKC,UAAU,eAAeoB,QAASvC,KAAK+B,QAC1Cd,EAAAhD,EAAAiD,cAAA,OAAKC,UAAU,OACbF,EAAAhD,EAAAiD,cAAA,OAAKC,UAAU,aACbF,EAAAhD,EAAAiD,cAAA,OAAKsB,IAAKF,EAAKG,IAAI,oBAGvBxB,EAAAhD,EAAAiD,cAAA,OAAKC,UAAU,YACbF,EAAAhD,EAAAiD,cAAA,cAAAvD,OAASqD,EAAM1C,KAAKkB,OAAOkD,MAE7BzB,EAAAhD,EAAAiD,cAAA,OAAKC,UAAU,YACbF,EAAAhD,EAAAiD,cAAA,MAAIC,UAAU,iBAAiBP,IAEjCK,EAAAhD,EAAAiD,cAAA,OAAKC,UAAU,OACbF,EAAAhD,EAAAiD,cAACyB,EAAD,CAAWjD,MAAOsB,EAAM1C,KAAKkB,OAAOE,SAGtCuB,EAAAhD,EAAAiD,cAAC0B,EAAA,EAAD,CAAOC,OAAQR,EAAMH,OAAQH,OAAQ/B,KAAK+B,OAAQZ,UAAWnB,KAAKgB,MAAMG,UAAW2B,KAAK,MACtF7B,EAAAhD,EAAAiD,cAAC6B,EAAA,EAAD,CAAahB,OAAQ/B,KAAK+B,QACxBd,EAAAhD,EAAAiD,cAAA,WACED,EAAAhD,EAAAiD,cAAA,MAAIC,UAAU,iBAAiBP,KAGnCK,EAAAhD,EAAAiD,cAAC8B,EAAA,EAAD,KACE/B,EAAAhD,EAAAiD,cAAA,OAAKC,UAAU,OACbF,EAAAhD,EAAAiD,cAAA,OAAKC,UAAU,YACbF,EAAAhD,EAAAiD,cAAA,OAAKC,UAAU,yBACbF,EAAAhD,EAAAiD,cAAA,OAAKsB,IAAKF,EAAKG,IAAI,oBAIvBxB,EAAAhD,EAAAiD,cAAA,OAAKC,UAAU,YACbF,EAAAhD,EAAAiD,cAAA,OAAKC,UAAU,MAAME,MAAO,CAAE4B,aAAc,SAC1ChC,EAAAhD,EAAAiD,cAAA,OAAKC,UAAU,YACbF,EAAAhD,EAAAiD,cAAA,oBACAD,EAAAhD,EAAAiD,cAAA,UAAKF,EAAM1C,KAAKkB,OAAO0D,SAEzBjC,EAAAhD,EAAAiD,cAAA,OAAKC,UAAU,YACbF,EAAAhD,EAAAiD,cAAA,oBACAD,EAAAhD,EAAAiD,cAAA,UAAKF,EAAM1C,KAAKkB,OAAO2D,UAI3BlC,EAAAhD,EAAAiD,cAAA,OAAKC,UAAU,MAAME,MAAO,CAAE4B,aAAc,SAC1ChC,EAAAhD,EAAAiD,cAAA,OAAKC,UAAU,aACbF,EAAAhD,EAAAiD,cAAA,wBAEDF,EAAM1C,KAAKkB,OAAO4D,UAAUnE,IAAI,SAACG,EAAMgC,GACtC,OACEH,EAAAhD,EAAAiD,cAAA,OAAKC,UAAU,WAAWC,IAAKA,GAC7BH,EAAAhD,EAAAiD,cAAA,UAAKxE,EAAQC,UAAUyC,EAAKiE,QAAQzC,WAM5CK,EAAAhD,EAAAiD,cAAA,OAAKC,UAAU,MAAME,MAAO,CAAE4B,aAAc,SAC1ChC,EAAAhD,EAAAiD,cAAA,OAAKC,UAAU,YAAYE,MAAO,CAAE4B,aAAc,SAChDhC,EAAAhD,EAAAiD,cAAA,oBAEFD,EAAAhD,EAAAiD,cAAA,OAAKC,UAAU,YACbF,EAAAhD,EAAAiD,cAACyB,EAAD,CAAWjD,MAAOsB,EAAM1C,KAAKkB,OAAOE,sBAtFrC6B,IAAMC,YCuIV8B,6BA7Hb,SAAAA,EAAYtC,GAAO,IAAAU,EAAA,OAAA5D,OAAA6D,EAAA,EAAA7D,CAAAkC,KAAAsD,IACjB5B,EAAA5D,OAAA8D,EAAA,EAAA9D,CAAAkC,KAAAlC,OAAA+D,EAAA,EAAA/D,CAAAwF,GAAAxB,KAAA9B,KAAMgB,KAWRuC,iBAAmB,WACjB,IAAMlB,EAAQX,EAAKW,MAEnBzE,EAAWyE,EAAMxD,MAAM2E,KAAK,SAAAnF,GAC1B,IAAMoF,EAAUpB,EAAM/D,KAAKX,OAAOU,EAAIE,SAChCmF,EAAYC,IAAOC,IAAKvB,EAAM1C,OAAOhC,OAAOU,EAAIsB,UAEtD+B,EAAKM,SAAS,CACZ1D,KAAMmF,EACN5E,KAAMR,EAAIQ,KACVc,OAAQ+D,OAtBKhC,EA2BnBmC,YAAc,SAAAC,GACZ,IAAMzB,EAAQX,EAAKW,MACb0B,EAAQ1B,EAAM2B,QAAQC,QAAQH,GAEhCC,EAAQ,EACV1B,EAAM2B,QAAQtD,KAAKoD,GAEnBzB,EAAM2B,QAAQE,OAAOH,EAAO,GAG9BrC,EAAKM,SAAS,CAAEgC,QAAQlG,OAAAqG,EAAA,EAAArG,CAAKuE,EAAM2B,YArClBtC,EAwCnB0C,aAAe,SAAA9F,GACb,IAAM+D,EAAQX,EAAKW,MAEnB,GAAIA,EAAM2B,QAAQ7G,OAAS,EAAG,CAC5B,IAAMkH,EAAU,GAYhB,OAVA/F,EAAKW,IAAI,SAAAqF,GACM3E,IAAO2E,EAAI3E,OAAQ,SAASP,GACvC,OAAOiD,EAAM2B,QAAQO,SAASnF,KAGvBjC,OAAS,GAChBkH,EAAQ3D,KAAK4D,KAIVD,EAEP,OAAO/F,GAvDToD,EAAKW,MAAQ,CACXmC,SAAU,GACVlG,KAAM,GACNO,KAAM,qCACNc,OAAQ,GACRqE,QAAS,IARMtC,wEA8DV,IAAA+C,EAAAzE,KACDqC,EAAQrC,KAAKqC,MAEnB,OACEpB,EAAAhD,EAAAiD,cAAA,OAAKC,UAAU,OACbF,EAAAhD,EAAAiD,cAAA,OAAKC,UAAU,kBACbF,EAAAhD,EAAAiD,cAAA,wBACAD,EAAAhD,EAAAiD,cAAA,OAAKC,UAAU,WAAWqB,IAAKkC,EAAO5D,SAAU2B,IAAI,cAGtDxB,EAAAhD,EAAAiD,cAAA,OAAKC,UAAU,gBAEbF,EAAAhD,EAAAiD,cAAA,OAAKC,UAAU,OACbF,EAAAhD,EAAAiD,cAAA,OAAKC,UAAU,iBACbF,EAAAhD,EAAAiD,cAACyD,EAAA1G,EAAD,KACEgD,EAAAhD,EAAAiD,cAAA,OAAKC,UAAU,cACbF,EAAAhD,EAAAiD,cAAA,MAAIG,MAAO,CAAE4B,aAAc,SAA3B,UACAhC,EAAAhD,EAAAiD,cAAA,OAAKC,UAAU,kBACbF,EAAAhD,EAAAiD,cAAC0D,EAAA,EAAD,CAAaC,UAAQ,GAClBxC,EAAM1C,OAAOV,IAAI,SAACG,EAAMgC,GACvB,OACEH,EAAAhD,EAAAiD,cAAC4D,EAAA,EAAD,CAAQvC,QAAS,kBAAMkC,EAAKZ,YAAYzE,IAAO2F,OAAQ1C,EAAM2B,QAAQO,SAASnF,GAAOgC,IAAKA,EAAKD,UAAU,OAAO6D,SAAO,EAACC,MAAM,YAAYnC,KAAK,MAC5IpG,EAAQC,UAAUyC,WAUnC6B,EAAAhD,EAAAiD,cAAA,OAAKC,UAAU,YACbF,EAAAhD,EAAAiD,cAAA,OAAKC,UAAU,OACZnB,KAAKoE,aAAa/B,EAAM/D,MAAMW,IAAI,SAACG,EAAMgC,GACxC,OACEH,EAAAhD,EAAAiD,cAAA,OAAKC,UAAU,qBAAqBC,IAAKA,GACvCH,EAAAhD,EAAAiD,cAACgE,EAAD,CAAM5G,KAAMc,QAMpB6B,EAAAhD,EAAAiD,cAACiE,EAAA,EAAD,CACEC,QAASpF,KAAKuD,kBAEdtC,EAAAhD,EAAAiD,cAAA,OAAKG,MAAO,CAAE4B,aAAc,SAC1BhC,EAAAhD,EAAAiD,cAACmE,EAAApH,EAAD,CACEqH,SAAU,KACVxC,KAAM,GACNmC,MAAO,oBACPM,SAAO,iBAlHT/D,cCNEgE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO7E,EAAAhD,EAAAiD,cAAC6E,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5C,KAAK,SAAA6C,GACjCA,EAAaC","file":"static/js/main.3efb24e8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pokeball.64b7ec9d.png\";","import startCase from 'lodash/startCase';\nimport toLower from 'lodash/toLower';\n\nconst helpers = {\n  titleCase: text => {\n    return startCase(toLower(text));\n  },\n\n  hashCode: str => {\n    var hash = 0;\n    for (var i = 0; i < str.length; i++) {\n       hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    return hash;\n  },\n\n  intToRGB: i => {\n    var c = (i & 0x00FFFFFF)\n        .toString(16)\n        .toUpperCase();\n\n    return \"00000\".substring(0, 6 - c.length) + c;\n  },\n\n  convertStringToColor: str => {\n    return `#${helpers.intToRGB(helpers.hashCode(str))}`;\n  }\n};\n\nexport default helpers;","export const getPokemon = async url => {\n  const res = await fetch(url);\n  let data = await res.json();\n  const results = data.results;\n  let arrMapping = [];\n\n  if (results.length > 0) {\n    const promises = results.map(async list => {\n      list.detail = await getPokemonDetail(list.url);\n      const item = mappingFilter(list.detail.types);\n\n      list.filter = item;\n      arrMapping = arrMapping.concat(item);\n\n      return list;\n    });\n    data.results = await Promise.all(promises);\n  }\n\n  data.filter = arrMapping;\n\n  return data;\n};\n\nexport const getPokemonDetail = async url => {\n  const res = await fetch(url);\n  const detail = await res.json();\n\n  return detail;\n};\n\nconst mappingFilter = types => {\n  const arr = [];\n\n  types.map(list => {\n    arr.push(list.type.name);\n  });\n\n  return arr;\n};","import pokeball from './images/pokeball.png';\n\nexport default {\n  pokeball\n};","\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport helpers from './../../helpers';\nimport './style.css';\n\nclass PokeTypes extends React.Component {\n  render() {\n    const props = this.props;\n    \n\n    return (\n      <div className=\"poketypes-wrapper left\">\n        {props.types && props.types.map((list, key) => {\n          return (\n            <div className=\"type-box\" key={key} style={{ backgroundColor: helpers.convertStringToColor(list.type.name)}}>\n              {helpers.titleCase(list.type.name)}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n}\n\nPokeTypes.propTypes = {\n  types: PropTypes.array\n};\n\nexport default PokeTypes;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\n\nimport helpers from './../../helpers';\nimport PokeTypes from './../PokeTypes';\nimport './style.css';\n\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isShow: false\n    };\n  }\n\n  toggle = () => {\n    this.setState(prevState => ({\n      isShow: !prevState.isShow\n    }));\n  };\n\n  getPokeImage = data => {\n    return get(data, 'detail.sprites.front_default', '');\n  };\n\n  render() {\n    const props = this.props;\n    const state = this.state;\n    const img = this.getPokeImage(props.data);\n    const name = helpers.titleCase(props.data.name);\n\n    return(\n      <div className=\"list-wrapper\" onClick={this.toggle}>\n        <div className=\"row\">\n          <div className=\"image-box\">\n            <img src={img} alt=\"POKEMON_IMAGE\"/>\n          </div>\n        </div>\n        <div className=\"row left\">\n          <h3>{`#${props.data.detail.id}`}</h3>\n        </div>\n        <div className=\"row left\">\n          <h2 className=\"text-pokoname\">{name}</h2>\n        </div>\n        <div className=\"row\">\n          <PokeTypes types={props.data.detail.types} />\n        </div>\n\n        <Modal isOpen={state.isShow} toggle={this.toggle} className={this.props.className} size=\"lg\">\n          <ModalHeader toggle={this.toggle}>\n            <div>\n              <h1 className=\"text-pokoname\">{name}</h1>\n            </div>\n          </ModalHeader>\n          <ModalBody>\n            <div className=\"row\">\n              <div className=\"col-xs-6\">\n                <div className=\"image-box image-modal\">\n                  <img src={img} alt=\"POKEMON_IMAGE\"/>\n                </div>\n              </div>\n\n              <div className=\"col-xs-6\">\n                <div className=\"row\" style={{ marginBottom: '30px' }}>\n                  <div className=\"col-xs-6\">\n                    <h2>Height</h2>\n                    <h3>{props.data.detail.height}</h3>\n                  </div>\n                  <div className=\"col-xs-6\">\n                    <h2>Weight</h2>\n                    <h3>{props.data.detail.weight}</h3>\n                  </div>\n                </div>\n\n                <div className=\"row\" style={{ marginBottom: '30px' }}>\n                  <div className=\"col-xs-12\">\n                    <h2>Abilities</h2>\n                  </div>\n                  {props.data.detail.abilities.map((list, key) => {\n                    return (\n                      <div className=\"col-xs-6\" key={key}>\n                        <h3>{helpers.titleCase(list.ability.name)}</h3>\n                      </div>\n                    )\n                  })}\n                </div>\n\n                <div className=\"row\" style={{ marginBottom: '30px' }}>\n                  <div className=\"col-xs-12\" style={{ marginBottom: '10px' }}>\n                    <h2>Types</h2>\n                  </div>\n                  <div className=\"col-xs-6\">\n                    <PokeTypes types={props.data.detail.types} />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </ModalBody>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nList.propTypes = {\n  data: PropTypes.object\n};\n\nexport default List;","import React, { Component } from 'react';\nimport { Waypoint } from 'react-waypoint';\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport Sticky from 'react-stickynode';\nimport { Button, ButtonGroup } from 'reactstrap';\nimport uniq from 'lodash/uniq';\nimport sortBy from 'lodash/sortBy';\nimport filter from 'lodash/filter';\n\nimport helpers from './helpers';\nimport { getPokemon } from './models/pokemon';\n// import SearchBox from './components/SearchBox';\nimport Images from './assets';\nimport List from './components/List';\n\nimport './styles/grid.min.css';\nimport './styles/App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      pureData: [],\n      data: [],\n      next: 'https://pokeapi.co/api/v2/pokemon/',\n      filter: [],\n      checked: []\n    };\n  }\n\n  handleGetPokemon = () => {\n    const state = this.state;\n\n    getPokemon(state.next).then(res => {\n      const newData = state.data.concat(res.results);\n      const newFilter = sortBy(uniq(state.filter.concat(res.filter)));\n\n      this.setState({\n        data: newData,\n        next: res.next,\n        filter: newFilter\n      });\n    });\n  };\n\n  handleCheck = selected => {\n    const state = this.state;\n    const index = state.checked.indexOf(selected);\n\n    if (index < 0) {\n      state.checked.push(selected);\n    } else {\n      state.checked.splice(index, 1);\n    }\n\n    this.setState({ checked: [...state.checked] });\n  };\n\n  handleFilter = data => {\n    const state = this.state;\n\n    if (state.checked.length > 0) {\n      const retData = [];\n\n      data.map(obj => {\n        const fill = filter(obj.filter, function(list) {\n          return state.checked.includes(list);\n        });\n  \n        if (fill.length > 0) {\n          retData.push(obj);\n        }\n      });\n\n      return retData;\n    } else {\n      return data;\n    }\n  };\n\n  render() {\n    const state = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"header-wrapper\">\n          <h1>Pokédex</h1>  \n          <img className=\"pokeball\" src={Images.pokeball} alt=\"pokeball\"/>\n        </div>\n        \n        <div className=\"main-wrapper\">\n          {/* <SearchBox /> */}\n          <div className=\"row\">\n            <div className=\"col-xs-3 left\">\n              <Sticky>\n                <div className=\"filter-box\">\n                  <h2 style={{ marginBottom: '20px' }}>Filter</h2>\n                  <div className=\"filter-content\">\n                    <ButtonGroup vertical>\n                      {state.filter.map((list, key) => {\n                        return (\n                          <Button onClick={() => this.handleCheck(list)} active={state.checked.includes(list)} key={key} className=\"left\" outline color=\"secondary\" size=\"lg\">\n                            {helpers.titleCase(list)}\n                          </Button>\n                        )\n                      })}\n                    </ButtonGroup>\n                  </div>\n                </div>\n              </Sticky>\n            </div>\n\n            <div className=\"col-xs-9\">\n              <div className=\"row\">\n                {this.handleFilter(state.data).map((list, key) => {\n                  return (\n                    <div className=\"col-xs-12 col-sm-4\" key={key}>\n                      <List data={list} />\n                    </div>\n                  )\n                })}\n              </div>\n\n              <Waypoint\n                onEnter={this.handleGetPokemon}\n              >\n                <div style={{ marginBottom: '10px' }}>\n                  <ClipLoader\n                    sizeUnit={\"px\"}\n                    size={30}\n                    color={'rgb(254, 207, 51)'}\n                    loading\n                  />\n                </div>\n              </Waypoint>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}